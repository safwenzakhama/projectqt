#include "eleve.h"
#include <QSystemTrayIcon>

eleve::eleve()
{

}

eleve::eleve(int a, QString n, QString p, QDate dn)
{
    id = a;
    nom = n;
    prenom = p;
    dateNaissance = dn;
}

QSqlQueryModel *eleve::afficher()
{
    QSqlQueryModel *model = new QSqlQueryModel();
    model->setQuery("SELECT * FROM eleves");
    model->setHeaderData(0, Qt::Horizontal, QObject::tr("id"));
    model->setHeaderData(1, Qt::Horizontal, QObject::tr("nom"));
    model->setHeaderData(2, Qt::Horizontal, QObject::tr("prenom"));
    model->setHeaderData(3, Qt::Horizontal, QObject::tr("date_naissance"));

    return model;
}

bool eleve::ajouter()
{
    QSqlQuery query;
    QString res = QString::number(id);
    query.prepare("INSERT INTO eleves(id, nom, prenom, date_naissance) VALUES (:id, :nom, :prenom, :dateNaissance)");
    query.bindValue(":id", res);
    query.bindValue(":nom", nom);
    query.bindValue(":prenom", prenom);
    query.bindValue(":dateNaissance", dateNaissance);

    return query.exec();
}

bool eleve::supprimer(int id)
{
    QSqlQuery query;
    QString res = QString::number(id);
    query.prepare("DELETE FROM eleves WHERE id = :id");
    query.bindValue(":id", res);

    return query.exec();
}

bool eleve::modifier(int idE)
{
    QSqlQuery query;
    QString res = QString::number(idE);

    query.prepare("UPDATE eleves SET nom=:nom, prenom=:prenom, date_naissance=:dateNaissance WHERE id=:idE");
    query.bindValue(":idE", res);
    query.bindValue(":nom", nom);
    query.bindValue(":prenom", prenom);
    query.bindValue(":dateNaissance", dateNaissance);

    return query.exec();
}



QSqlQueryModel * materiel::tri_prix()
{
    QSqlQueryModel * model= new QSqlQueryModel();

model->setQuery("select * FROM materiels ORDER BY prix ASC");
model->setHeaderData(0, Qt::Horizontal, QObject::tr("id"));
model->setHeaderData(1, Qt::Horizontal, QObject::tr("nom"));
model->setHeaderData(2, Qt::Horizontal, QObject::tr("type"));
model->setHeaderData(3, Qt::Horizontal, QObject::tr("etat"));
model->setHeaderData(4, Qt::Horizontal, QObject::tr("prix"));
model->setHeaderData(5, Qt::Horizontal, QObject::tr("nombre"));
model->setHeaderData(6, Qt::Horizontal, QObject::tr("id_admin"));


    return model;
}

QSqlQueryModel * materiel::tri_id()
{
    QSqlQueryModel * model= new QSqlQueryModel();

model->setQuery("select * FROM materiels ORDER BY id ASC");
model->setHeaderData(0, Qt::Horizontal, QObject::tr("id"));
model->setHeaderData(1, Qt::Horizontal, QObject::tr("nom"));
model->setHeaderData(2, Qt::Horizontal, QObject::tr("type"));
model->setHeaderData(3, Qt::Horizontal, QObject::tr("etat"));
model->setHeaderData(4, Qt::Horizontal, QObject::tr("prix"));
model->setHeaderData(5, Qt::Horizontal, QObject::tr("nombre"));
model->setHeaderData(6, Qt::Horizontal, QObject::tr("id_admin"));


    return model;
}



QSqlQueryModel * materiel::tri_nom()
{
    QSqlQueryModel * model= new QSqlQueryModel();

model->setQuery("select * FROM materiels ORDER BY nom ASC");
model->setHeaderData(0, Qt::Horizontal, QObject::tr("id"));
model->setHeaderData(1, Qt::Horizontal, QObject::tr("nom"));
model->setHeaderData(2, Qt::Horizontal, QObject::tr("type"));
model->setHeaderData(3, Qt::Horizontal, QObject::tr("etat"));
model->setHeaderData(4, Qt::Horizontal, QObject::tr("prix"));
model->setHeaderData(5, Qt::Horizontal, QObject::tr("nombre"));
model->setHeaderData(6, Qt::Horizontal, QObject::tr("id_admin"));


    return model;
}



QSqlQueryModel *materiel::displayClause(QString cls)
{
    QSqlQueryModel * model= new QSqlQueryModel();
    model->setQuery("SELECT * FROM materiels " +cls);
    model->setHeaderData(0, Qt::Horizontal, QObject::tr("id"));
    model->setHeaderData(1, Qt::Horizontal, QObject::tr("nom"));
    model->setHeaderData(2, Qt::Horizontal, QObject::tr("type"));
    model->setHeaderData(3, Qt::Horizontal, QObject::tr("etat"));
    model->setHeaderData(4, Qt::Horizontal, QObject::tr("prix"));
    model->setHeaderData(5, Qt::Horizontal, QObject::tr("nombre"));
    model->setHeaderData(6, Qt::Horizontal, QObject::tr("id_admin"));

    return model;
}

void materiel::notification_ajoutmateriel()
{

    QSystemTrayIcon *notifyIcon = new QSystemTrayIcon;
    notifyIcon->show();
    notifyIcon->showMessage("Gestion des materiels ","Nouvau materiel ajoutÃ©e ",QSystemTrayIcon::Information,15000);
}


void materiel::notification_suppmateriel()
{

    QSystemTrayIcon *notifyIcon = new QSystemTrayIcon;
    notifyIcon->show();
    notifyIcon->showMessage("Gestion des materiels ","materiel supprime ",QSystemTrayIcon::Information,15000);
}

void materiel::notification_modifmateriel()
{

    QSystemTrayIcon *notifyIcon = new QSystemTrayIcon;
    notifyIcon->show();
    notifyIcon->showMessage("Gestion des materiels ","materiel modifie ",QSystemTrayIcon::Information,15000);
}


void materiel::notification_pdf()
{

    QSystemTrayIcon *notifyIcon = new QSystemTrayIcon;
    notifyIcon->show();
    notifyIcon->showMessage("Gestion des materiels ","pdf generee ",QSystemTrayIcon::Information,15000);
}
